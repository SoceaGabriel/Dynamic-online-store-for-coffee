
-----------------------------------------------PACHET TABELA COMENZI CURENTE----------------------------------------------------
create or replace PACKAGE COM_CRT_FUNC IS

PROCEDURE INSERT_COMENZI_CRT_ALL(ID_USR IN COMENZI_CURENTE.ID_USER%TYPE, 
                            STATUS_COM IN COMENZI_CURENTE.STATUS_COMANDA%TYPE, 
                            DATA_COM IN COMENZI_CURENTE.DATA_COMANDA%TYPE,
                            NR_PR IN COMENZI_CURENTE.NR_PRODUSE%TYPE);

PROCEDURE UPDATE_ID_USER(ID_U IN COMENZI_CURENTE.ID_USER%TYPE, ID_COM IN COMENZI_CURENTE.ID_COMANDA%TYPE);

PROCEDURE UPDATE_STATUS_COMANDA(STATUS_C IN COMENZI_CURENTE.STATUS_COMANDA%TYPE, ID_COM IN COMENZI_CURENTE.ID_COMANDA%TYPE);

PROCEDURE UPDATE_DATA_COMANDA(DATA_C IN COMENZI_CURENTE.DATA_COMANDA%TYPE, ID_COM IN COMENZI_CURENTE.ID_COMANDA%TYPE);

PROCEDURE INSERT_ON_ISTORIC(ID_COM IN COMENZI_CURENTE.ID_COMANDA%TYPE);
PROCEDURE STATUS_COMANDA_FINALIZATA(STATUS_C IN COMENZI_CURENTE.STATUS_COMANDA%TYPE, ID_COM IN COMENZI_CURENTE.ID_COMANDA%TYPE, ID_USR IN UTILIZATORI.ID_USER%TYPE);

PROCEDURE DELETE_ROW(ID_COM IN COMENZI_CURENTE.ID_COMANDA%TYPE);

TYPE RC_COMENZI IS REF CURSOR;
PROCEDURE SELECT_COMENZI(CURS OUT RC_COMENZI);

PROCEDURE CA_ULTIMA_LUNA(REZ OUT NUMBER);

END COM_CRT_FUNC;

/

create or replace PACKAGE BODY COM_CRT_FUNC IS

PROCEDURE INSERT_COMENZI_CRT_ALL(ID_USR IN COMENZI_CURENTE.ID_USER%TYPE, 
                            STATUS_COM IN COMENZI_CURENTE.STATUS_COMANDA%TYPE, 
                            DATA_COM IN COMENZI_CURENTE.DATA_COMANDA%TYPE,
                            NR_PR IN COMENZI_CURENTE.NR_PRODUSE%TYPE) IS
BEGIN
    INSERT INTO COMENZI_CURENTE(ID_USER, STATUS_COMANDA, DATA_COMANDA, NR_PRODUSE) 
        VALUES(ID_USR, STATUS_COM, DATA_COM, NR_PR);
    COMMIT;
END INSERT_COMENZI_CRT_ALL;

PROCEDURE UPDATE_ID_USER(ID_U IN COMENZI_CURENTE.ID_USER%TYPE, ID_COM IN COMENZI_CURENTE.ID_COMANDA%TYPE) IS
BEGIN
    UPDATE COMENZI_CURENTE SET ID_USER = ID_U WHERE ID_COMANDA = ID_COM;
    COMMIT;
END UPDATE_ID_USER;

PROCEDURE UPDATE_STATUS_COMANDA(STATUS_C IN COMENZI_CURENTE.STATUS_COMANDA%TYPE, ID_COM IN COMENZI_CURENTE.ID_COMANDA%TYPE) IS
BEGIN
    UPDATE COMENZI_CURENTE SET STATUS_COMANDA = STATUS_C WHERE ID_COMANDA = ID_COM;
    COMMIT;
END UPDATE_STATUS_COMANDA;

PROCEDURE UPDATE_DATA_COMANDA(DATA_C IN COMENZI_CURENTE.DATA_COMANDA%TYPE, ID_COM IN COMENZI_CURENTE.ID_COMANDA%TYPE) IS
BEGIN
    UPDATE COMENZI_CURENTE SET DATA_COMANDA = DATA_C WHERE ID_COMANDA = ID_COM;
    COMMIT;
END UPDATE_DATA_COMANDA;

PROCEDURE INSERT_ON_ISTORIC(ID_COM IN COMENZI_CURENTE.ID_COMANDA%TYPE) IS
TYPE RC_COM_CRT IS REF CURSOR;
TYPE RC_PROD_COM IS REF CURSOR;
V_CURSOR_COM_CRT RC_COM_CRT;
V_CURSOR_PROD_COM RC_PROD_COM;
V_ROW_COM_CRT COMENZI_CURENTE%ROWTYPE;
V_ROW_PROD_COM PRODUSE_COMANDA%ROWTYPE;
DATA_CURENTA DATE;
DATA_COMANDAA DATE;
BEGIN
    OPEN V_CURSOR_COM_CRT FOR SELECT * FROM COMENZI_CURENTE WHERE ID_COMANDA = ID_COM;
    LOOP
        FETCH V_CURSOR_COM_CRT INTO V_ROW_COM_CRT;
        EXIT WHEN V_CURSOR_COM_CRT%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE(V_ROW_COM_CRT.DATA_COMANDA);
        OPEN V_CURSOR_PROD_COM FOR SELECT * FROM PRODUSE_COMANDA WHERE COMENZI_CURENTE_ID_COMANDA = V_ROW_COM_CRT.ID_COMANDA;
        LOOP
            FETCH V_CURSOR_PROD_COM INTO V_ROW_PROD_COM;
            EXIT WHEN V_CURSOR_PROD_COM%NOTFOUND;
            SELECT sysdate INTO DATA_CURENTA FROM DUAL;
            DBMS_OUTPUT.PUT_LINE(V_ROW_COM_CRT.ID_COMANDA);
            INSERT INTO ISTORIC_COMENZI(NR_BUCATI_CUMPARATE, DATA_COMANDA, UTILIZATORI_ID_USER, PRODUSE_COD_PRODUS, ID_COMANDA, DATA_FINALIZARE_COM, PRET_BUC, PRET_TOT)
                        VALUES(V_ROW_PROD_COM.NR_BUCATI_COMANDATE,
                                TO_DATE(TO_CHAR(V_ROW_COM_CRT.DATA_COMANDA,'yyyy/mm/dd hh24:mi:ss'), 'yyyy/mm/dd hh24:mi:ss'),
                                V_ROW_COM_CRT.ID_USER,
                                V_ROW_PROD_COM.COD_PRODUS_COMANDAT,
                                V_ROW_COM_CRT.ID_COMANDA,
                                DATA_CURENTA,
                                V_ROW_PROD_COM.PRET_PER_BUC,
                                V_ROW_PROD_COM.PRET_TOTAL);
        END LOOP;
    END LOOP;
    CLOSE V_CURSOR_COM_CRT;
    CLOSE V_CURSOR_PROD_COM;
    COMMIT;
END INSERT_ON_ISTORIC;

PROCEDURE STATUS_COMANDA_FINALIZATA(STATUS_C IN COMENZI_CURENTE.STATUS_COMANDA%TYPE, ID_COM IN COMENZI_CURENTE.ID_COMANDA%TYPE, ID_USR IN UTILIZATORI.ID_USER%TYPE) IS
BEGIN
    IF STATUS_C = 'comanda_finalizata' THEN
        COM_CRT_FUNC.INSERT_ON_ISTORIC(ID_COM);
        UTILIZATORI_FUNC.UPDATE_NR_COMENZI(1,ID_USR);
        DELETE FROM COMENZI_CURENTE WHERE ID_COMANDA = ID_COM;
        COMMIT;
    END IF;
END STATUS_COMANDA_FINALIZATA;

PROCEDURE DELETE_ROW(ID_COM IN COMENZI_CURENTE.ID_COMANDA%TYPE) IS
BEGIN
    DELETE FROM COMENZI_CURENTE WHERE ID_COMANDA = ID_COM; --STERGEM RANDUL
    --SELECT MAX(ID_COMANDA) INTO MAXIM FROM COMENZI_CURENTE; --AFLAM MAXIMUL 
    --ALTER TABLE COMENZI_CURENTE AUTO_INCREMENT := MAXIM +1; --RESETAM AUTOINCREMENTUL
    COMMIT;
END DELETE_ROW;

PROCEDURE SELECT_COMENZI(CURS OUT RC_COMENZI) IS
BEGIN
    OPEN CURS FOR SELECT ID_COMANDA, ID_USER, STATUS_COMANDA, TO_CHAR(DATA_COMANDA, 'yyyy/mm/dd hh24:mi:ss') "DATA_FORMATATA", NR_PRODUSE FROM COMENZI_CURENTE;
END SELECT_COMENZI;

PROCEDURE CA_ULTIMA_LUNA(REZ OUT NUMBER) IS
CURSO RC_COMENZI;
CURSO_PROD RC_COMENZI;
LAST_MONTH DATE;
ID_CMD COMENZI_CURENTE.ID_COMANDA%TYPE;
PRT_TOT PRODUSE_COMANDA.PRET_TOTAL%TYPE;
SUMA NUMBER :=0;
BEGIN
    REZ := 0;
    SELECT ADD_MONTHS(SYSDATE,-1) INTO LAST_MONTH FROM DUAL;
    OPEN CURSO FOR SELECT ID_COMANDA FROM COMENZI_CURENTE WHERE DATA_COMANDA >= LAST_MONTH;
        LOOP
            FETCH CURSO INTO ID_CMD;
            EXIT WHEN CURSO%NOTFOUND;
            OPEN CURSO_PROD FOR SELECT PRET_TOTAL FROM PRODUSE_COMANDA WHERE COMENZI_CURENTE_ID_COMANDA = ID_CMD;
                LOOP
                    FETCH CURSO_PROD INTO PRT_TOT;
                    EXIT WHEN CURSO_PROD%NOTFOUND;
                    SUMA := SUMA + PRT_TOT;
                END LOOP;
                CLOSE CURSO_PROD;
            REZ := REZ + SUMA;
            SUMA := 0;
        END LOOP;
    CLOSE CURSO;
    dbms_output.put_line(REZ); 
END CA_ULTIMA_LUNA;

END COM_CRT_FUNC;

/