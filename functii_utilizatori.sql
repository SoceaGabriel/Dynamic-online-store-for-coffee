
-----------------------------------------------PACHET TABELA UTILIZATORI--------------------------------------------------------
create or replace PACKAGE UTILIZATORI_FUNC IS

PROCEDURE INSERT_UTILIZATORI_ALL(NUM IN UTILIZATORI.NUME%TYPE,
                                PRENUM IN UTILIZATORI.PRENUME%TYPE,
                                PASS IN UTILIZATORI.PAROLA%TYPE,
                                RANG IN UTILIZATORI.RANG_USER%TYPE,
                                TEL IN UTILIZATORI.TELEFON%TYPE,
                                EML IN UTILIZATORI.EMAIL%TYPE,
                                LOC IN UTILIZATORI.LOCALITATE%TYPE,
                                JUD IN UTILIZATORI.JUDET%TYPE,
                                COD_P IN UTILIZATORI.COD_POSTAL%TYPE,
                                ADR IN UTILIZATORI.ADRESA%TYPE);

PROCEDURE UPDATE_NUME(NME IN UTILIZATORI.NUME%TYPE, ID_USR IN UTILIZATORI.ID_USER%TYPE);

PROCEDURE UPDATE_PRENUME(PREN IN UTILIZATORI.PRENUME%TYPE, ID_USR IN UTILIZATORI.ID_USER%TYPE);

PROCEDURE UPDATE_PAROLA(PASS IN UTILIZATORI.PAROLA%TYPE, ID_USR IN UTILIZATORI.ID_USER%TYPE);

PROCEDURE UPDATE_RANG_USER(RANG IN UTILIZATORI.RANG_USER%TYPE, ID_USR IN UTILIZATORI.ID_USER%TYPE);

PROCEDURE UPDATE_TELEFON(TEL IN UTILIZATORI.TELEFON%TYPE, ID_USR IN UTILIZATORI.ID_USER%TYPE);

PROCEDURE UPDATE_EMAIL(EML IN UTILIZATORI.EMAIL%TYPE, ID_USR IN UTILIZATORI.ID_USER%TYPE);

PROCEDURE UPDATE_LOCALITATE(LOC IN UTILIZATORI.LOCALITATE%TYPE, ID_USR IN UTILIZATORI.ID_USER%TYPE);

PROCEDURE UPDATE_JUDET(JUD IN UTILIZATORI.JUDET%TYPE, ID_USR IN UTILIZATORI.ID_USER%TYPE);

PROCEDURE UPDATE_COD_POSTAL(COD_P IN UTILIZATORI.COD_POSTAL%TYPE, ID_USR IN UTILIZATORI.ID_USER%TYPE);

PROCEDURE UPDATE_ADRESA(ADR IN UTILIZATORI.ADRESA%TYPE, ID_USR IN UTILIZATORI.ID_USER%TYPE);

PROCEDURE UPDATE_NR_COMENZI(NR_COM IN UTILIZATORI.NR_COMENZI%TYPE, ID_USR IN UTILIZATORI.ID_USER%TYPE);

PROCEDURE DELETE_ROW_ID_UTILIZATOR(ID_USR IN UTILIZATORI.ID_USER%TYPE);

TYPE RC_USER IS REF CURSOR;
PROCEDURE SELECT_ADMIN_PROFILE(CURSOR_PROFIL OUT RC_USER, ID_USR IN UTILIZATORI.ID_USER%TYPE);

PROCEDURE SELECT_ADMINISTRATORI(CURSOR_PROFIL OUT RC_USER);

PROCEDURE SELECT_CUMPARATORI(CURSOR_PROFIL OUT RC_USER);

PROCEDURE TOTAL_ADMINI(REZ OUT NUMBER);

PROCEDURE TOTAL_CUMPARATORI(REZ OUT NUMBER);

PROCEDURE SELECT_TOP_CUSTOMERS(CURSOR_PROFIL OUT RC_USER);

PROCEDURE SELECT_ADMIN_PROC(EML IN UTILIZATORI.EMAIL%TYPE, PASS IN UTILIZATORI.PAROLA%TYPE, CURSOR_PROFIL OUT RC_USER);

END UTILIZATORI_FUNC;
/

CREATE OR REPLACE PACKAGE BODY UTILIZATORI_FUNC IS

PROCEDURE INSERT_UTILIZATORI_ALL(NUM IN UTILIZATORI.NUME%TYPE,
                                PRENUM IN UTILIZATORI.PRENUME%TYPE,
                                PASS IN UTILIZATORI.PAROLA%TYPE,
                                RANG IN UTILIZATORI.RANG_USER%TYPE,
                                TEL IN UTILIZATORI.TELEFON%TYPE,
                                EML IN UTILIZATORI.EMAIL%TYPE,
                                LOC IN UTILIZATORI.LOCALITATE%TYPE,
                                JUD IN UTILIZATORI.JUDET%TYPE,
                                COD_P IN UTILIZATORI.COD_POSTAL%TYPE,
                                ADR IN UTILIZATORI.ADRESA%TYPE) IS
BEGIN
    INSERT INTO UTILIZATORI( NUME,
                            PRENUME,
                            PAROLA,
                            RANG_USER,
                            TELEFON,
                            EMAIL,
                            LOCALITATE,
                            JUDET,
                            COD_POSTAL,
                            ADRESA,
                            NR_COMENZI) VALUES(NUM, PRENUM, PASS, RANG, TEL, EML, LOC, JUD, COD_P, ADR, 0);
    COMMIT;
END INSERT_UTILIZATORI_ALL;

PROCEDURE UPDATE_NUME(NME IN UTILIZATORI.NUME%TYPE, ID_USR IN UTILIZATORI.ID_USER%TYPE) IS
BEGIN
    UPDATE UTILIZATORI SET NUME = NME WHERE ID_USER = ID_USR;
    COMMIT;
END UPDATE_NUME;

PROCEDURE UPDATE_PRENUME(PREN IN UTILIZATORI.PRENUME%TYPE, ID_USR IN UTILIZATORI.ID_USER%TYPE) IS
BEGIN
    UPDATE UTILIZATORI SET PRENUME = PREN WHERE ID_USER = ID_USR;
    COMMIT;
END UPDATE_PRENUME;

PROCEDURE UPDATE_PAROLA(PASS IN UTILIZATORI.PAROLA%TYPE, ID_USR IN UTILIZATORI.ID_USER%TYPE) IS
BEGIN
    UPDATE UTILIZATORI SET PAROLA = PASS WHERE ID_USER = ID_USR;
    COMMIT;
END UPDATE_PAROLA;

PROCEDURE UPDATE_RANG_USER(RANG IN UTILIZATORI.RANG_USER%TYPE, ID_USR IN UTILIZATORI.ID_USER%TYPE) IS
BEGIN
    UPDATE UTILIZATORI SET RANG_USER = RANG WHERE ID_USER = ID_USR;
    COMMIT;
END UPDATE_RANG_USER;

PROCEDURE UPDATE_TELEFON(TEL IN UTILIZATORI.TELEFON%TYPE, ID_USR IN UTILIZATORI.ID_USER%TYPE) IS
BEGIN
    UPDATE UTILIZATORI SET TELEFON = TEL WHERE ID_USER = ID_USR;
    COMMIT;
END UPDATE_TELEFON;

PROCEDURE UPDATE_EMAIL(EML IN UTILIZATORI.EMAIL%TYPE, ID_USR IN UTILIZATORI.ID_USER%TYPE) IS
BEGIN
    UPDATE UTILIZATORI SET EMAIL = EML WHERE ID_USER = ID_USR;
    COMMIT;
END UPDATE_EMAIL;

PROCEDURE UPDATE_LOCALITATE(LOC IN UTILIZATORI.LOCALITATE%TYPE, ID_USR IN UTILIZATORI.ID_USER%TYPE) IS
BEGIN
    UPDATE UTILIZATORI SET LOCALITATE = LOC WHERE ID_USER = ID_USR;
    COMMIT;
END UPDATE_LOCALITATE;

PROCEDURE UPDATE_JUDET(JUD IN UTILIZATORI.JUDET%TYPE, ID_USR IN UTILIZATORI.ID_USER%TYPE) IS
BEGIN
    UPDATE UTILIZATORI SET JUDET = JUD WHERE ID_USER = ID_USR;
    COMMIT;
END UPDATE_JUDET;

PROCEDURE UPDATE_COD_POSTAL(COD_P IN UTILIZATORI.COD_POSTAL%TYPE, ID_USR IN UTILIZATORI.ID_USER%TYPE) IS
BEGIN
    UPDATE UTILIZATORI SET COD_POSTAL = COD_P WHERE ID_USER = ID_USR;
    COMMIT;
END UPDATE_COD_POSTAL;

PROCEDURE UPDATE_ADRESA(ADR IN UTILIZATORI.ADRESA%TYPE, ID_USR IN UTILIZATORI.ID_USER%TYPE) IS
BEGIN
    UPDATE UTILIZATORI SET ADRESA = ADR WHERE ID_USER = ID_USR;
    COMMIT;
END UPDATE_ADRESA;

PROCEDURE UPDATE_NR_COMENZI(NR_COM IN UTILIZATORI.NR_COMENZI%TYPE, ID_USR IN UTILIZATORI.ID_USER%TYPE) IS
BEGIN
    UPDATE UTILIZATORI SET NR_COMENZI = NR_COMENZI + NR_COM WHERE ID_USER = ID_USR;
    COMMIT;
END UPDATE_NR_COMENZI;

PROCEDURE DELETE_ROW_ID_UTILIZATOR(ID_USR IN UTILIZATORI.ID_USER%TYPE) IS
BEGIN
    DELETE FROM UTILIZATORI WHERE ID_USER = ID_USR;
    COMMIT;
END DELETE_ROW_ID_UTILIZATOR;

PROCEDURE SELECT_ADMIN_PROFILE(CURSOR_PROFIL OUT RC_USER, ID_USR IN UTILIZATORI.ID_USER%TYPE) IS
BEGIN
    OPEN CURSOR_PROFIL FOR SELECT * FROM UTILIZATORI WHERE ID_USER = ID_USR;
END SELECT_ADMIN_PROFILE;

PROCEDURE SELECT_ADMINISTRATORI(CURSOR_PROFIL OUT RC_USER) IS
BEGIN
    OPEN CURSOR_PROFIL FOR SELECT * FROM UTILIZATORI WHERE RANG_USER = 'admin';
END SELECT_ADMINISTRATORI;

PROCEDURE SELECT_CUMPARATORI(CURSOR_PROFIL OUT RC_USER) IS
BEGIN 
    OPEN CURSOR_PROFIL FOR SELECT * FROM UTILIZATORI WHERE RANG_USER = 'customer';
END SELECT_CUMPARATORI;

PROCEDURE TOTAL_ADMINI(REZ OUT NUMBER) IS
BEGIN
    SELECT COUNT(*) INTO REZ FROM UTILIZATORI WHERE RANG_USER = 'admin';
END TOTAL_ADMINI;

PROCEDURE TOTAL_CUMPARATORI(REZ OUT NUMBER) IS 
BEGIN
    SELECT COUNT(*) INTO REZ FROM UTILIZATORI WHERE RANG_USER = 'customer';
END TOTAL_CUMPARATORI;

PROCEDURE SELECT_TOP_CUSTOMERS(CURSOR_PROFIL OUT RC_USER) IS
BEGIN
    OPEN CURSOR_PROFIL FOR SELECT NUME, PRENUME, NR_COMENZI FROM UTILIZATORI WHERE RANG_USER = 'customer' AND ROWNUM <= 5 ORDER BY NR_COMENZI DESC;
END SELECT_TOP_CUSTOMERS;

PROCEDURE SELECT_ADMIN_PROC(EML IN UTILIZATORI.EMAIL%TYPE, PASS IN UTILIZATORI.PAROLA%TYPE, CURSOR_PROFIL OUT RC_USER) IS
BEGIN
    OPEN CURSOR_PROFIL FOR SELECT * FROM UTILIZATORI WHERE EMAIL = EML AND PAROLA = PASS;
END SELECT_ADMIN_PROC;

END UTILIZATORI_FUNC;
/
